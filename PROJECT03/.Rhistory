labs(title = "PAI of Models", subtitle = "Base Date Dec 31, 2018", col = "Models")
PAI_rf_ranked_grid  %>% ggplot() + geom_line(aes(x = prop_cum_area , y = prop_cum_crime_freq , col = "Random Forest")) +
geom_line(data = PAI_cu_ranked_grid , aes( x= prop_cum_area , y = prop_cum_crime_freq , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
labs(title = "AUC of Models", subtitle = "Base Date Dec 31, 2018", col = "Models")
PAI_comparison  %>% ggplot() + geom_line(aes( x = prop_cum_area_rf, y = prop_cum_crime_freq_rf, color = "Random Forest")) +
geom_line( aes( x = prop_cum_area_cu, y = prop_cum_crime_freq_cu,  color = "Cubist" )) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
geom_abline(slope = 1, intercept = 0) + theme(aspect.ratio = 1) +labs(title = "Comparing Cumulative Crime 2019", color = "Models")
# Diagnostic
PEI_rf_grid %>% filter( prop_cum_area_best < 0.01 ) %>% ggplot() + geom_line( aes(x = prop_cum_area_best, y = PEI , col = "Random Forest") ) +  geom_line(data = (PEI_cu_grid %>% filter( prop_cum_area_best < 0.01 ) ), aes( x= prop_cum_area_best , y = PEI , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
labs(title = "PEI of Models", subtitle = "Base Date Dec 31, 2018", col = "Models")
PAI_rf_ranked_grid %>% filter(prop_cum_area < 0.01 ) %>% ggplot() + geom_line(aes(x = prop_cum_area , y = RRI , col = "Random Forest")) +
geom_line(data = (PAI_cu_ranked_grid %>% filter( prop_cum_area < 0.01) ), aes( x= prop_cum_area , y = RRI , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
labs(title = "RRI of Models", subtitle = "Base Date Dec 31, 2018", col = "Models")
PAI_rf_ranked_grid %>% filter(prop_cum_area < 0.01 ) %>% ggplot() + geom_line(aes(x = rank , y = PAI , col = "Random Forest")) +
geom_line(data = (PAI_cu_ranked_grid %>% filter( prop_cum_area < 0.01) ), aes( x= rank , y = PAI , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
labs(title = "PAI of Models", subtitle = "Base Date Dec 31, 2018", col = "Models")
PAI_rf_ranked_grid  %>% ggplot() + geom_line(aes(x = prop_cum_area , y = prop_cum_crime_freq , col = "Random Forest")) +
geom_line(data = PAI_cu_ranked_grid , aes( x= prop_cum_area , y = prop_cum_crime_freq , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
geom_abline(slope = 1, intercept = 0) + theme(aspect.ratio = 1) +
labs(title = "AUC of Models", subtitle = "Base Date Dec 31, 2018", col = "Models")
PAI_comparison  %>% ggplot() + geom_line(aes( x = prop_cum_area_rf, y = prop_cum_crime_freq_rf, color = "Random Forest")) +
geom_line( aes( x = prop_cum_area_cu, y = prop_cum_crime_freq_cu,  color = "Cubist" )) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
geom_abline(slope = 1, intercept = 0) + theme(aspect.ratio = 1) +labs(title = "Comparing Cumulative Crime 2019", color = "Models")
# Diagnostic
PEI_rf_grid %>% filter( prop_cum_area_best < 0.01 ) %>% ggplot() + geom_line( aes(x = prop_cum_area_best, y = PEI , col = "Random Forest") ) +  geom_line(data = (PEI_cu_grid %>% filter( prop_cum_area_best < 0.01 ) ), aes( x= prop_cum_area_best , y = PEI , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
labs(title = "PEI of Models", subtitle = "Base Date Dec 31, 2018", col = "Models")
PAI_rf_ranked_grid %>% filter(prop_cum_area < 0.01 ) %>% ggplot() + geom_line(aes(x = prop_cum_area , y = RRI , col = "Random Forest")) +
geom_line(data = (PAI_cu_ranked_grid %>% filter( prop_cum_area < 0.01) ), aes( x= prop_cum_area , y = RRI , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
labs(title = "RRI of Models", subtitle = "Base Date Dec 31, 2018", col = "Models")
PAI_rf_ranked_grid %>% filter(prop_cum_area < 0.01 ) %>% ggplot() + geom_line(aes(x = rank , y = PAI , col = "Random Forest")) +
geom_line(data = (PAI_cu_ranked_grid %>% filter( prop_cum_area < 0.01) ), aes( x= rank , y = PAI , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
labs(title = "PAI of Models", subtitle = "Base Date Dec 31, 2018", col = "Models")
PAI_rf_ranked_grid  %>% ggplot() + geom_line(aes(x = prop_cum_area , y = prop_cum_crime_freq , col = "Random Forest")) +
geom_line(data = PAI_cu_ranked_grid , aes( x= prop_cum_area , y = prop_cum_crime_freq , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
geom_abline(slope = 1, intercept = 0) + theme(aspect.ratio = 1) +
labs(title = "AUC of Models", subtitle = "Base Date Dec 31, 2018", col = "Models")
# Diagnostic
PEI_rf_grid %>% filter( prop_cum_area_best < 0.01 ) %>% ggplot() + geom_line( aes(x = prop_cum_area_best, y = PEI , col = "Random Forest") ) +  geom_line(data = (PEI_cu_grid %>% filter( prop_cum_area_best < 0.01 ) ), aes( x= prop_cum_area_best , y = PEI , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
labs(title = "PEI of Models", subtitle = "Base Date Dec 31, 2018", col = "Models", x = "Proportion of Cumulative Area")
PAI_rf_ranked_grid %>% filter(prop_cum_area < 0.01 ) %>% ggplot() + geom_line(aes(x = prop_cum_area , y = RRI , col = "Random Forest")) +
geom_line(data = (PAI_cu_ranked_grid %>% filter( prop_cum_area < 0.01) ), aes( x= prop_cum_area , y = RRI , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
labs(title = "RRI of Models", subtitle = "Base Date Dec 31, 2018", col = "Models")
PAI_rf_ranked_grid %>% filter(prop_cum_area < 0.01 ) %>% ggplot() + geom_line(aes(x = rank , y = PAI , col = "Random Forest")) +
geom_line(data = (PAI_cu_ranked_grid %>% filter( prop_cum_area < 0.01) ), aes( x= rank , y = PAI , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
labs(title = "PAI of Models", subtitle = "Base Date Dec 31, 2018", col = "Models")
PAI_rf_ranked_grid  %>% ggplot() + geom_line(aes(x = prop_cum_area , y = prop_cum_crime_freq , col = "Random Forest")) +
geom_line(data = PAI_cu_ranked_grid , aes( x= prop_cum_area , y = prop_cum_crime_freq , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
geom_abline(slope = 1, intercept = 0) + theme(aspect.ratio = 1) +
labs(title = "AUC of Models", subtitle = "Base Date Dec 31, 2018", col = "Models")
# Diagnostic
PEI_rf_grid %>% filter( prop_cum_area_best < 0.01 ) %>% ggplot() + geom_line( aes(x = prop_cum_area_best, y = PEI , col = "Random Forest") ) +  geom_line(data = (PEI_cu_grid %>% filter( prop_cum_area_best < 0.01 ) ), aes( x= prop_cum_area_best , y = PEI , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
labs(title = "PEI of Models", subtitle = "Base Date Dec 31, 2018", col = "Models", x = "Proportion of Cumulative Area")
PAI_rf_ranked_grid %>% filter(prop_cum_area < 0.01 ) %>% ggplot() + geom_line(aes(x = prop_cum_area , y = RRI , col = "Random Forest")) +
geom_line(data = (PAI_cu_ranked_grid %>% filter( prop_cum_area < 0.01) ), aes( x= prop_cum_area , y = RRI , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
labs(title = "RRI of Models", subtitle = "Base Date Dec 31, 2018", col = "Models", x = "Proportion of Cumulative Area")
PAI_rf_ranked_grid %>% filter(prop_cum_area < 0.01 ) %>% ggplot() + geom_line(aes(x = rank , y = PAI , col = "Random Forest")) +
geom_line(data = (PAI_cu_ranked_grid %>% filter( prop_cum_area < 0.01) ), aes( x= rank , y = PAI , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
labs(title = "PAI of Models", subtitle = "Base Date Dec 31, 2018", col = "Models")
PAI_rf_ranked_grid  %>% ggplot() + geom_line(aes(x = prop_cum_area , y = prop_cum_crime_freq , col = "Random Forest")) +
geom_line(data = PAI_cu_ranked_grid , aes( x= prop_cum_area , y = prop_cum_crime_freq , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
geom_abline(slope = 1, intercept = 0) + theme(aspect.ratio = 1) +
labs(title = "AUC of Models", subtitle = "Base Date Dec 31, 2018", col = "Models")
# Diagnostic
PEI_rf_grid %>% filter( prop_cum_area_best < 0.01 ) %>% ggplot() + geom_line( aes(x = prop_cum_area_best, y = PEI , col = "Random Forest") ) +  geom_line(data = (PEI_cu_grid %>% filter( prop_cum_area_best < 0.01 ) ), aes( x= prop_cum_area_best , y = PEI , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
labs(title = "PEI of Models", subtitle = "Base Date Dec 31, 2018", col = "Models", x = "Proportion of Cumulative Area")
PAI_rf_ranked_grid %>% filter(prop_cum_area < 0.01 ) %>% ggplot() + geom_line(aes(x = prop_cum_area , y = RRI , col = "Random Forest")) +
geom_line(data = (PAI_cu_ranked_grid %>% filter( prop_cum_area < 0.01) ), aes( x= prop_cum_area , y = RRI , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
labs(title = "Recapture Rate Index of Models", subtitle = "Base Date Dec 31, 2018", col = "Models", x = "Proportion of Cumulative Area")
PAI_rf_ranked_grid %>% filter(prop_cum_area < 0.01 ) %>% ggplot() + geom_line(aes(x = rank , y = PAI , col = "Random Forest")) +
geom_line(data = (PAI_cu_ranked_grid %>% filter( prop_cum_area < 0.01) ), aes( x= rank , y = PAI , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
labs(title = "PAI of Models", subtitle = "Base Date Dec 31, 2018", col = "Models")
PAI_rf_ranked_grid  %>% ggplot() + geom_line(aes(x = prop_cum_area , y = prop_cum_crime_freq , col = "Random Forest")) +
geom_line(data = PAI_cu_ranked_grid , aes( x= prop_cum_area , y = prop_cum_crime_freq , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
geom_abline(slope = 1, intercept = 0) + theme(aspect.ratio = 1) +
labs(title = "AUC of Models", subtitle = "Base Date Dec 31, 2018", col = "Models")
# Diagnostic
PEI_rf_grid %>% filter( prop_cum_area_best < 0.01 ) %>% ggplot() + geom_line( aes(x = prop_cum_area_best, y = PEI , col = "Random Forest") ) +  geom_line(data = (PEI_cu_grid %>% filter( prop_cum_area_best < 0.01 ) ), aes( x= prop_cum_area_best , y = PEI , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
labs(title = "Predictive Efficiency Index of Models", subtitle = "Base Date Dec 31, 2018", col = "Models", x = "Proportion of Cumulative Area")
PAI_rf_ranked_grid %>% filter(prop_cum_area < 0.01 ) %>% ggplot() + geom_line(aes(x = prop_cum_area , y = RRI , col = "Random Forest")) +
geom_line(data = (PAI_cu_ranked_grid %>% filter( prop_cum_area < 0.01) ), aes( x= prop_cum_area , y = RRI , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
labs(title = "Recapture Rate Index of Models", subtitle = "Base Date Dec 31, 2018", col = "Models", x = "Proportion of Cumulative Area")
PAI_rf_ranked_grid %>% filter(prop_cum_area < 0.01 ) %>% ggplot() + geom_line(aes(x = rank , y = PAI , col = "Random Forest")) +
geom_line(data = (PAI_cu_ranked_grid %>% filter( prop_cum_area < 0.01) ), aes( x= rank , y = PAI , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
labs(title = "PAI of Models", subtitle = "Base Date Dec 31, 2018", col = "Models")
PAI_rf_ranked_grid  %>% ggplot() + geom_line(aes(x = prop_cum_area , y = prop_cum_crime_freq , col = "Random Forest")) +
geom_line(data = PAI_cu_ranked_grid , aes( x= prop_cum_area , y = prop_cum_crime_freq , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
geom_abline(slope = 1, intercept = 0) + theme(aspect.ratio = 1) +
labs(title = "AUC of Models", subtitle = "Base Date Dec 31, 2018", col = "Models")
# Diagnostic
PEI_rf_grid %>% filter( prop_cum_area_best < 0.01 ) %>% ggplot() + geom_line( aes(x = prop_cum_area_best, y = PEI , col = "Random Forest") ) +  geom_line(data = (PEI_cu_grid %>% filter( prop_cum_area_best < 0.01 ) ), aes( x= prop_cum_area_best , y = PEI , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
labs(title = "Predictive Efficiency Index of Models", subtitle = "Base Date Dec 31, 2018", col = "Models", x = "Proportion of Cumulative Area")
PAI_rf_ranked_grid %>% filter(prop_cum_area < 0.01 ) %>% ggplot() + geom_line(aes(x = prop_cum_area , y = RRI , col = "Random Forest")) +
geom_line(data = (PAI_cu_ranked_grid %>% filter( prop_cum_area < 0.01) ), aes( x= prop_cum_area , y = RRI , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
labs(title = "Recapture Rate Index of Models", subtitle = "Base Date Dec 31, 2018", col = "Models", x = "Proportion of Cumulative Area")
PAI_rf_ranked_grid %>% filter(prop_cum_area < 0.01 ) %>% ggplot() + geom_line(aes(x = rank , y = PAI , col = "Random Forest")) +
geom_line(data = (PAI_cu_ranked_grid %>% filter( prop_cum_area < 0.01) ), aes( x= rank , y = PAI , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
labs(title = "Predictive Accuracy Index of Models", subtitle = "Base Date Dec 31, 2018", col = "Models")
PAI_rf_ranked_grid  %>% ggplot() + geom_line(aes(x = prop_cum_area , y = prop_cum_crime_freq , col = "Random Forest")) +
geom_line(data = PAI_cu_ranked_grid , aes( x= prop_cum_area , y = prop_cum_crime_freq , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
geom_abline(slope = 1, intercept = 0) + theme(aspect.ratio = 1) +
labs(title = "AUC of Models", subtitle = "Base Date Dec 31, 2018", col = "Models")
# Diagnostic
PEI_rf_grid %>% filter( prop_cum_area_best < 0.01 ) %>% ggplot() + geom_line( aes(x = prop_cum_area_best, y = PEI , col = "Random Forest") ) +  geom_line(data = (PEI_cu_grid %>% filter( prop_cum_area_best < 0.01 ) ), aes( x= prop_cum_area_best , y = PEI , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
labs(title = "Predictive Efficiency Index of Models", subtitle = "Base Date Dec 31, 2018", col = "Models", x = "Proportion of Cumulative Area") -> p_PEI
PAI_rf_ranked_grid %>% filter(prop_cum_area < 0.01 ) %>% ggplot() + geom_line(aes(x = prop_cum_area , y = RRI , col = "Random Forest")) +
geom_line(data = (PAI_cu_ranked_grid %>% filter( prop_cum_area < 0.01) ), aes( x= prop_cum_area , y = RRI , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
labs(title = "Recapture Rate Index of Models", subtitle = "Base Date Dec 31, 2018", col = "Models", x = "Proportion of Cumulative Area") -> p_RRI
PAI_rf_ranked_grid %>% filter(prop_cum_area < 0.01 ) %>% ggplot() + geom_line(aes(x = rank , y = PAI , col = "Random Forest")) +
geom_line(data = (PAI_cu_ranked_grid %>% filter( prop_cum_area < 0.01) ), aes( x= rank , y = PAI , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
labs(title = "Predictive Accuracy Index of Models", subtitle = "Base Date Dec 31, 2018", col = "Models") -> p_PAI
PAI_rf_ranked_grid  %>% ggplot() + geom_line(aes(x = prop_cum_area , y = prop_cum_crime_freq , col = "Random Forest")) +
geom_line(data = PAI_cu_ranked_grid , aes( x= prop_cum_area , y = prop_cum_crime_freq , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
geom_abline(slope = 1, intercept = 0) + theme(aspect.ratio = 1) +
labs(title = "AUC of Models", subtitle = "Base Date Dec 31, 2018", col = "Models") -> p_AUC
( p_panel_stats = plot_grid(p_PAI, p_RRI, p_PEI, p_AUC, ncol = 2 ) )
print(paste0("AUC for Cubist Model is: ", AUC_Cubist = calc_AUC_PAI(PAI_cu_ranked_grid ) ) )
print(paste0("AUC for Random Forest is: ", AUC_Randomforest = calc_AUC_PAI(PAI_rf_ranked_grid ) ))
PAI_comparison %>% filter(rank %in% c( 1, 5, 25, 100, 200 )) %>%
select( rank, PAI_rf, PAI_cu, cum_crime_freq_rf, cum_crime_freq_cu, prop_cum_crime_freq_rf , prop_cum_crime_freq_cu, prop_cum_area_cu ) %>%
mutate( prop_cum_crime_freq_rf = 100 * prop_cum_crime_freq_rf, prop_cum_crime_freq_cu = 100 * prop_cum_crime_freq_cu, prop_cum_area_cu = 100 * prop_cum_area_cu) %>%
kable(digits = 2, caption = "Model PAI Comparison Test 2019",
col.names = c("Rank", "RF", "Cubist", "RF", "Cubist", "RF", "Cubist", "Area")) %>%
kable_styling(bootstrap_options = c("hover", "striped")) %>%
add_header_above(c(" ", "PAI" = 2, "Cum. # Assaults"= 2, "Cum. Assault %"= 2, "Cum. Area%" = 1))
# Diagnostic
PEI_rf_grid %>% filter( prop_cum_area_best < 0.01 ) %>% ggplot() + geom_line( aes(x = prop_cum_area_best, y = PEI , col = "Random Forest") ) +  geom_line(data = (PEI_cu_grid %>% filter( prop_cum_area_best < 0.01 ) ), aes( x= prop_cum_area_best , y = PEI , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
labs(title = "Predictive Efficiency Index of Models", subtitle = "Base Date Dec 31, 2018", col = "Models", x = "Proportion of Cumulative Area") -> p_PEI
PAI_rf_ranked_grid %>% filter(prop_cum_area < 0.01 ) %>% ggplot() + geom_line(aes(x = prop_cum_area , y = RRI , col = "Random Forest")) +
geom_line(data = (PAI_cu_ranked_grid %>% filter( prop_cum_area < 0.01) ), aes( x= prop_cum_area , y = RRI , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
labs(title = "Recapture Rate Index of Models", subtitle = "Base Date Dec 31, 2018", col = "Models", x = "Proportion of Cumulative Area") -> p_RRI
PAI_rf_ranked_grid %>% filter(prop_cum_area < 0.01 ) %>% ggplot() + geom_line(aes(x = rank , y = PAI , col = "Random Forest")) +
geom_line(data = (PAI_cu_ranked_grid %>% filter( prop_cum_area < 0.01) ), aes( x= rank , y = PAI , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
labs(title = "Predictive Accuracy Index of Models", subtitle = "Base Date Dec 31, 2018", col = "Models") -> p_PAI
PAI_rf_ranked_grid  %>% ggplot() + geom_line(aes(x = prop_cum_area , y = prop_cum_crime_freq , col = "Random Forest")) +
geom_line(data = PAI_cu_ranked_grid , aes( x= prop_cum_area , y = prop_cum_crime_freq , col = "Cubist") ) +
scale_color_manual(values = c("Random Forest"= "blue", "Cubist"= "red")) +
geom_abline(slope = 1, intercept = 0) + theme(aspect.ratio = 1) +
labs(title = "AUC of Models", subtitle = "Base Date Dec 31, 2018", col = "Models") -> p_AUC
( p_panel_stats = plot_grid(p_PAI, p_RRI, p_PEI, p_AUC, ncol = 2 ) )
panel_stats_plot_file = paste0(data_dir, "EXP_PANEL_STATS_PLOT_2018-12-31", ".png" )
cowplot::save_plot( panel_stats_plot_file  , p_panel_stats , base_height = 6 )
log2(2)
log2(1)
p = 1/3
p *log2(p)
p *-log2(p)
(1-p) * -log2(1-p)
p*-log2(p) + (1-p)*-log2(1-p)
v = (1, 2, 1, 3, 4, 1)/12
v =c(1, 2, 1, 3, 4, 1)/12
v
sum(v)
log2(v)
-log2(v)
v
v * log2(v)
sum(v*(-log2(v)))
32000 + 4047.57 + 45
250 + 3516.29 + 2805 + 1795
250 + 3516.29 + 2805 + 1795 + 675 + 135
250 + 3516.29 + 2805 + 1795 + 675 + 135 - 500
3100 + 2922.10 + 11708.18 + 2376.24 + 3374.98
550000 + 2305 + 675 + 135 + 1795 + 2805 + 3516.29 + 250 - 500
560981.3 + 23481.50
x = c(1:100)
x
-x
-x/100
rev(x)
x = -rev(1:99)/100
x
plot(x, log(x))
x
x = rev(1:99)/100
x
plot(x)
plot(x, log(x))
log(1)
log(.9)
log(.8)
log(.6)
library(readr)
Subway_Links_2020_zRatios <- read_csv("/Volumes/GDRIVE_SSD/homes/alex/datascience/620_WEB_ANALYTICS_2022_SPRING/WEEK04/Subway_Links_2020_zRatios.csv")
View(Subway_Links_2020_zRatios)
library(ggplot2)
library(tidyverse)
subwayz = Subway_Links_2020_zRatios
subwayz %>% ggplot(aes(x=Borough, y = zRatio20to19)) + geom_boxplot()
subwayz %>% ggplot(aes(x=Borough, y = Ratio20to19)) + geom_boxplot()
subwayz %>% ggplot(aes(x=Borough, y = Ratio20to19)) + geom_histogram()
subwayz
subwayz
subwayz %>% select(Borough, Ratio20to19, zRatio20to19)
subwayz %>% select(Borough, Ratio20to19, zRatio20to19) %>% ggplot(aes(x=Ratio20to19, fill = Borough ) ) +
geom_histogram(alpha = 0.5, position="identity")
subwayz %>% select(Borough, Ratio20to19, zRatio20to19) %>% ggplot(aes(x=Ratio20to19, fill = Borough ) ) + geom_density(alpha = 0.5, position = "identity")
subwayz %>% select(Borough, Ratio20to19, zRatio20to19) %>% ggplot(aes(x=zRatio20to19, fill = Borough ) ) + geom_density(alpha = 0.5, position = "identity")
p2 = subwayz %>% select(Borough, Ratio20to19, zRatio20to19) %>% ggplot(aes(x=zRatio20to19, fill = Borough ) ) + geom_density(alpha = 0.5, position = "identity")
p1 = subwayz %>% select(Borough, Ratio20to19, zRatio20to19) %>% ggplot(aes(x=Ratio20to19, fill = Borough ) ) + geom_density(alpha = 0.5, position = "identity")
library(cowplot)
plot_grid(p1, p2)
y = c( 0.5, .75, .9, 1.0)
y
x = 6 - ( 8 - y) / 1.434
x
H = (16 - 2 * y ) / 1.434
H
W = 1.434 * H
W
39 * 3
136 -117
39 * 3 + 20
39 * 3
136 - 117
19 - 16
4 * 4
4 * 4 + 3
1 * 3 + 4 * 4 + 3 * 39
library(readr)
Nomination_Biadjacency_Matrix <- read_csv("/Volumes/GDRIVE_SSD/homes/alex/datascience/620_WEB_ANALYTICS_2022_SPRING/PROJECT02/Nomination_Biadjacency_Matrix.csv")
View(Nomination_Biadjacency_Matrix)
library(readr)
Nomination_Biadjacency_Matrix <- read_csv("/Volumes/GDRIVE_SSD/homes/alex/datascience/620_WEB_ANALYTICS_2022_SPRING/PROJECT02/Nomination_Biadjacency_Matrix.csv",
col_names = FALSE)
View(Nomination_Biadjacency_Matrix)
library(readr)
Nomination_Biadjacency_Matrix <- read_csv("/Volumes/GDRIVE_SSD/homes/alex/datascience/620_WEB_ANALYTICS_2022_SPRING/PROJECT02/Nomination_Biadjacency_Matrix.csv",
col_names = FALSE)
View(Nomination_Biadjacency_Matrix)
dim(Nomination_Biadjacency_Matrix)
A = Nomination_Biadjacency_Matrix
t(A)
A %*% t(A)
dim(A)
dim(t(A))
A %>*% t(A)
A %*% t(A)
class(A)
as.matrix(A)
mA = as.matrix(A)
mA %*% t(mA)
mB = mA %*% t(mA)
mB
dim(B)
dim(mB)
plot(mB)
mean(mB)
mA
sum(mA)
B
rowSums(mA)
library(readr)
Nomination_Biadjacency_Matrix <- read_csv("/Volumes/GDRIVE_SSD/homes/alex/datascience/620_WEB_ANALYTICS_2022_SPRING/PROJECT02/Nomination_Biadjacency_Matrix.csv",
col_names = FALSE)
View(Nomination_Biadjacency_Matrix)
A = Nomination_Biadjacency_Matrix
rowSums(A)
colSums(A)
A %*% t(A)
dim(A)
dim(t(A))
A * t(A)
A %*% t(A)
mA = as.matrix(A)
dim(A)
dim(mA)
mA %*% t(mA)
B = mA %*% t(mA)
B
plot(A)
plot(B)
install.packages("igraph")
library(igraph)
graph_from_adjacency_matrix(B, mode = "undirected", weighted = TRUE, diag = FALSE )
graph_from_adjacency_matrix(B, mode = "upper", weighted = TRUE, diag = FALSE )
g = graph_from_adjacency_matrix(B, mode = "upper", weighted = TRUE, diag = FALSE )
plot(g)
mean(B)
diag(B)
B - diag(B)
diag(B)
C = diag( x = diag(B), nrow=length(diag(B))
)
C
rowSums(C)
colSums(C)
C[1:5,1:5]
B - C
D = B - C
D[1:5, 1:5]
rowSums(D)
rowSums(D)/(nrow(D) - 1)
rowSums(D)/(nrow(D) - 1)/2
mean( rowSums(D)/(nrow(D) - 1)/2 )
M = mean( rowSums(D)/(nrow(D) - 1)/2 )
M
D - M
D
D[1:5, 1:5]
D[1:5, 1:5] - M
0.5* D
0.5* D[1:5,1:5]
0.5* D[1:5,1:5] - M
0.5* D[1:20,1:20] - M
B
C
C[100:105, 100:105]
B - C
(B - C )
(B - C )/2
upper.tri(B)
B[upper.tri(B)]
D = B[upper.tri(B, diag=FALSE)]
D
D[1:20,1:20]
D = B[upper.tri(B, diag=FALSE)]
D
dim(D)
dim(B)
D = B[upper.tri(B, diag=FALSE)]
dim(B)
dim(D)
D = B
D[ lower.tri(D)] = 0
D
D[1:10,1:10]
D = B
D[1:20,1:20]
D[1:10,1:10]
D[ lower.tri(D, diag=TRUE)] = 0
D[1:10,1:10]
mean( D[ D>0])
mean( D)
mean(D[D > 0])
D
E = D/188
E
mean(E[E > 0])
std(E[E>0])
sd(E[E>0])
hist(E[E>0])
A
B
diag(B)
diag(B)/188
load("/Volumes/GDRIVE_SSD/download/davis.RData")
davis
plot(davis)
davis$mel
davis$val
setwd("/Volumes/GDRIVE_SSD/homes/alex/datascience/620_WEB_ANALYTICS_2022_SPRING/PROJECT03")
library(readr)
names_all <- read_csv("names_all.csv")
View(names_all)
library(skimr)
skim(names_all)
names_all
names_all %>% group_by(female)
table(names_all)
table(names_all)
prop.table(table(names_all))
table(names_all$Gender)
names_all %>% mutate(first_let = Name[1] )
library(tidyverse)
names_all %>% mutate(first_let = Name[1] )
names_all %>% mutate(first_let = substr(Name,1,1) )
names_all %>% mutate(first_let = substr(Name,1,1) ) -> names_all2
names_all2
table(names_all2$Gender, names_all2$first_let)
prop.table(table(names_all2$Gender, names_all2$first_let))
plot(prop.table(table(names_all2$Gender, names_all2$first_let)))
t = prop.table(table(names_all2$Gender, names_all2$first_let))
t
t(t)
table(names_all2$Gender, names_all2$first_let)
t = table(names_all2$Gender, names_all2$first_let)
t
t = transpose( table(names_all2$Gender, names_all2$first_let) )
t = t(table(names_all2$Gender, names_all2$first_let) )
t
skim(t)
class(t)
plot(t)
first_letter = as.data.frame.matrix( t )
first_letter
first_letter %>% ggplot() + geom_bar(aes(x = female))
library(tidyverse)
library(skimr)
library(ggplot2)
library(tidyverse)
library(skimr)
library(ggplot2)
names_all = read_csv("names_all.csv")
library(tidyverse)
library(skimr)
library(ggplot2)
This is more stuff.
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(skimr)
library(ggplot2)
names_all = read_csv("names_all.csv")
names_all = read_csv("names_all.csv")
names_all %>% mutate(first_let = substr(Name,1,1) ) -> names_all2
first_letter =as.data.frame.matrix( t(table(names_all2$Gender, names_all2$first_let) ))
first_letter
names_all2
names_all2 %>% group_by(first_letter, Gender)
names_all2 %>% group_by(first_letter, Gender) %>% summarize( Count = n())
names_all2 %>% group_by(first_let, Gender) %>% summarize( Count = n())
names_all = read_csv("names_all.csv")
names_all %>% mutate(first_let = substr(Name,1,1) ) -> names_all2
#first_letter =as.data.frame.matrix( t(table(names_all2$Gender, names_all2$first_let) ))
names_all2 %>% group_by(first_let, Gender) %>% summarize(Count =n()) -> first_letter
ggplot(data= first_letter, aes(fill = Gender, y = Count, x = first_let ))
ggplot(data= first_letter, aes(fill = Gender, y = Count, x = first_let )) +
geom_bar(position = "stack", stat = "identity")
prop.table(table( names_all2$Gender, names_all2$first_let))
prop.table(table( names_all2$first_let, names_all2$Gender))
prop.table(table( names_all2$Gender))
prop.table(table( names_all2$Gender))
prop.table(table( names_all2$Gender))
prop.table(table( names_all2$first_let))
t(prop.table(table( names_all2$first_let)) )
as.data.frame.matrix( t(prop.table(table( names_all2$first_let)) ) )
as.data.frame.matrix(prop.table(table( names_all2$first_let)) )
as.data.frame.matrix(prop.table(table( names_all2$first_let ) ) )
as.data.frame.matrix(prop.table(table( names_all2$first_let  ) ) )
as.data.frame.matrix(prop.table(table( names_all2$first_let  ) ) )
prop.table(table( names_all2$first_let  ) ) )
prop.table(table( names_all2$first_let  ) )
prop.table(table( names_all2$first_let  ) )-> by_first_let
prop.table(table( names_all2$first_let  ) )-> by_first_let
by_first_let
prop.table(table( names_all2$first_let  ) )-> by_first_let
t( by_first_let )
prop.table(table( names_all2$first_let  ) )-> by_first_let
as_data_frame( t( by_first_let ) )
prop.table(table( names_all2$first_let  ) )-> by_first_let
as.data.frame( t( by_first_let ) )
prop.table(table( names_all2$first_let  ) )-> by_first_let
as.dataframe( t( by_first_let ) )
prop.table(table( names_all2$first_let  ) )-> by_first_let
df = data.frame( let = names(by_first_let), proportion = as.numeric(by_first_let) )
prop.table(table( names_all2$first_let  ) )-> by_first_let
df = data.frame( let = names(by_first_let), proportion = as.numeric(by_first_let) )
df
prop.table(table( names_all2$first_let  ) )-> by_first_let
df = data.frame( letter = names(by_first_let), proportion = as.numeric(by_first_let) )
df %>% kable()
ggplot(data= first_letter, aes(fill = Gender, y = Count, x = first_let )) +
geom_bar(position = "stack", stat = "identity")
prop.table(table( names_all2$Gender))
prop.table(table( names_all2$first_let  ) )-> by_first_let
df = data.frame( letter = names(by_first_let), proportion = as.numeric(by_first_let) )
df %>% kable()
library(tidyverse)
library(skimr)
library(ggplot2)
library(knitr)
library(kableExtra)
prop.table(table( names_all2$first_let  ) )-> by_first_let
df = data.frame( letter = names(by_first_let), proportion = as.numeric(by_first_let) )
df %>% kable()
prop.table(table( names_all2$first_let  ) )-> by_first_let
df = data.frame( letter = names(by_first_let), proportion = as.numeric(by_first_let) )
df %>% kable(digits =2)
prop.table(table( names_all2$first_let  ) )-> by_first_let
df = data.frame( letter = names(by_first_let), proportion = as.numeric(by_first_let) * 100 )
df %>% kable(digits =2)
prop.table(table( names_all2$first_let  ) )-> by_first_let
df = data.frame( letter = names(by_first_let), proportion = as.numeric(by_first_let) * 100 )
df %>% kable(digits =1)
df %>% arrange( desc(proportion)) %>% kable(digits = 1)
